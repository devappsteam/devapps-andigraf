/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/pages/associate.js":
/*!************************************************!*\
  !*** ./resources/assets/js/pages/associate.js ***!
  \************************************************/
/***/ (() => {

eval("\"user strict\";\n\n(function ($) {\n  var fields = ['corporate_name', 'fantasy_name', 'postcode', 'address', 'number', 'district', 'city', 'state'];\n  var physical_fields = ['personal_document', 'first_name', 'last_name', 'birth_date'];\n  function before_load_cnpj() {\n    for (var _i = 0, _fields = fields; _i < _fields.length; _i++) {\n      field = _fields[_i];\n      $(\"#\".concat(field)).val(null).prop('readonly', true);\n    }\n  }\n  function after_load_cnpj() {\n    for (var _i2 = 0, _fields2 = fields; _i2 < _fields2.length; _i2++) {\n      field = _fields2[_i2];\n      $(\"#\".concat(field)).prop('readonly', false);\n    }\n  }\n  $(function () {\n    $('[name=\"type\"]').on('change', function (e) {\n      if ($(this).val() == 'physical') {\n        $('.corporate').hide();\n        $('.personal').show();\n        personal_required(true);\n        corporate_required(false);\n      } else {\n        $('.corporate').show();\n        $('.personal').hide();\n        personal_required(false);\n        corporate_required(true);\n      }\n    });\n    $('#find_cnpj').on('click', function (e) {\n      find_cnpj($('#corporate_document').val().replace(/\\D/g, ''));\n    });\n    var SPMaskBehavior = function SPMaskBehavior(val) {\n        return val.replace(/\\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';\n      },\n      spOptions = {\n        onKeyPress: function onKeyPress(val, e, field, options) {\n          field.mask(SPMaskBehavior.apply({}, arguments), options);\n        }\n      };\n    $('#phone, #whatsapp, #responsible_phone').mask(SPMaskBehavior, spOptions);\n    $('#postcode').on('keyup', delay(function (e) {\n      if ($(this).val().length == 9) {\n        find_postcode($(this).val().replace(/\\D/g, ''));\n      }\n    }, 500));\n    $('.delete').on('click', function (e) {\n      e.preventDefault();\n      var button = $(this);\n      Swal.fire({\n        icon: 'question',\n        title: 'Deseja realmente excluir este registro?',\n        showCancelButton: true,\n        confirmButtonText: 'Sim',\n        cancelButtonText: \"N\\xE3o\"\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          $('#form_delete').find('#associate_delete').val(button.data('delete'));\n          $('#form_delete').submit();\n        }\n      });\n    });\n    $('#btn_filter').on('click', function (e) {\n      e.preventDefault();\n      $('#form_filter').slideToggle(300);\n    });\n  });\n  function delay(callback, ms) {\n    var timer = 0;\n    return function () {\n      var context = this,\n        args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        callback.apply(context, args);\n      }, ms || 0);\n    };\n  }\n  function personal_required() {\n    var required = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    $('#personal_document').prop('required', required).val(null);\n    $('#first_name').prop('required', required).val(null);\n    $('#last_name').prop('required', required).val(null);\n    $('#birth_date').prop('required', required).val(null);\n  }\n  function corporate_required() {\n    var required = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    $('#corporate_document').prop('required', required).val(null);\n    $('#corporate_name').prop('required', required).val(null);\n    $('#fantasy_name').prop('required', required).val(null);\n    $('#responsible_first_name').prop('required', required).val(null);\n    $('#responsible_last_name').prop('required', required).val(null);\n    $('#responsible_phone').prop('required', required).val(null);\n    $('#responsible_email').prop('required', required).val(null);\n    $('#responsible_job').prop('required', required).val(null);\n  }\n  function apply_data_by_cnpj(data) {\n    $('#corporate_name').val(data.nome);\n    $('#fantasy_name').val(data.fantasia);\n    $('#phone').val(data.telefone);\n    $('#email').val(data.email);\n    $('#postcode').val(data.cep.replace('.', ''));\n    $('#address').val(data.logradouro);\n    $('#number').val(data.numero);\n    $('#complement').val(data.complemento);\n    $('#district').val(data.bairro);\n    $('#city').val(data.municipio);\n    $('#state').val(data.uf);\n  }\n  function find_cnpj(cnpj) {\n    var validatecnpj = /^[0-9]{14}$/;\n    if (validatecnpj.test(cnpj)) {\n      if (validatecnpj.test(cnpj)) {\n        $.ajax({\n          url: \"https://www.receitaws.com.br/v1/cnpj/\" + cnpj + \"/?callback=?\",\n          type: \"GET\",\n          dataType: \"JSON\",\n          beforeSend: function beforeSend() {\n            before_load_cnpj();\n          },\n          success: function success(response) {\n            if (response.status == \"OK\") {\n              apply_data_by_cnpj(response);\n            }\n          }\n        }).done(function () {\n          after_load_cnpj();\n        });\n      }\n    }\n  }\n  function postcode_clear() {\n    $('#postcode').val(null);\n    $('#address').val(null);\n    $('#number').val(null);\n    $('#complement').val(null);\n    $('#district').val(null);\n    $('#city').val(null);\n    $('#state').val(null);\n  }\n  function find_postcode(postcode) {\n    //Verifica se campo cep possui valor informado.\n    if (postcode != \"\") {\n      //Expressão regular para validar o CEP.\n      var postcode_validate = /^[0-9]{8}$/;\n\n      //Valida o formato do CEP.\n      if (postcode_validate.test(postcode)) {\n        $('#address').val('...');\n        $('#district').val('...');\n        $('#city').val('...');\n        $('#state').val('...');\n\n        //Consulta o webservice viacep.com.br/\n        $.getJSON(\"https://viacep.com.br/ws/\" + postcode + \"/json/?callback=?\", function (dados) {\n          if (!(\"erro\" in dados)) {\n            //Atualiza os campos com os valores da consulta.\n\n            $('#address').val(dados.logradouro);\n            $('#district').val(dados.bairro);\n            $('#city').val(dados.localidade);\n            $('#state').val(dados.uf);\n          } //end if.\n          else {\n            //CEP pesquisado não foi encontrado.\n            postcode_clear();\n            alert(\"CEP não encontrado.\");\n          }\n        });\n      } //end if.\n      else {\n        //cep é inválido.\n        postcode_clear();\n        alert(\"Formato de CEP inválido.\");\n      }\n    } //end if.\n    else {\n      //cep sem valor, limpa formulário.\n      postcode_clear();\n    }\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/pages/associate.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/pages/associate.js"]();
/******/ 	
/******/ })()
;